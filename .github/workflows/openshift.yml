name: Build and Deploy to OpenShift

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/rtmp-server:latest ./rtmp-server
        docker push ghcr.io/${{ github.repository_owner }}/rtmp-server:latest

    - name: Install OpenShift CLI
      run: |
        curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
        tar -xvf oc.tar.gz
        sudo mv oc /usr/local/bin

    - name: Log in to OpenShift
      run: oc login ${{ secrets.OPENSHIFT_SERVER }} --token=${{ secrets.OPENSHIFT_TOKEN }}

    - name: Switch to the existing project
      run: oc project rtmp

    - name: Check if deployment exists
      id: check-deployment
      run: |
        if oc get deployment rtmp-server-deployment; then
          echo "deployment_exists=true" >> $GITHUB_ENV
        else
          echo "deployment_exists=false" >> $GITHUB_ENV
        fi

    - name: Create deployment if it does not exist
      if: env.deployment_exists == 'false'
      run: |
        oc new-app --name=rtmp-server-deployment ghcr.io/${{ github.repository_owner }}/rtmp-server:latest
        oc set resources deployment rtmp-server-deployment --limits=cpu=500m,memory=512Mi --requests=cpu=250m,memory=256Mi
        oc set probe deployment/rtmp-server-deployment --liveness --get-url=http://:8080/health --initial-delay-seconds=30 --timeout-seconds=1
        oc set probe deployment/rtmp-server-deployment --readiness --get-url=http://:8080/ready --initial-delay-seconds=5 --timeout-seconds=1

    - name: Update deployment image
      if: env.deployment_exists == 'true'
      run: |
        oc set image deployment/rtmp-server-deployment rtmp-server-container=ghcr.io/${{ github.repository_owner }}/rtmp-server:latest

    - name: Expose service
      run: |
        if ! oc get svc rtmp-server-service; then
          oc expose deployment rtmp-server-deployment --port=8080 --name=rtmp-server-service
        fi

    - name: Create route
      run: |
        if ! oc get route rtmp-server-route; then
          oc expose svc rtmp-server-service --name=rtmp-server-route
        fi
